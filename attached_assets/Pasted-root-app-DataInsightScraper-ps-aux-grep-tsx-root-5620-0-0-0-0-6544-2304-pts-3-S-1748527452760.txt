root@app:~/DataInsightScraper# ps aux | grep tsx
root        5620  0.0  0.0   6544  2304 pts/3    S+   15:00   0:00 grep --color=auto tsx
root@app:~/DataInsightScraper# npm run build

> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist

vite v5.4.18 building for production...
✓ 3099 modules transformed.
../dist/public/index.html                     0.58 kB │ gzip:   0.36 kB
../dist/public/assets/index-CDnjBT11.css     85.91 kB │ gzip:  14.48 kB
../dist/public/assets/index-Cmpuh_fa.js   1,157.29 kB │ gzip: 335.53 kB

(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
✓ built in 7.47s
▲ [WARNING] Import "sendMentionNotification" will always be undefined because there is no matching export in "server/services/email-service.ts" [import-is-undefined]

    server/routes.ts:5189:39:
      5189 │                     await emailService.sendMentionNotification({
           ╵                                        ~~~~~~~~~~~~~~~~~~~~~~~

1 warning

  dist/index.js  257.5kb

⚡ Done in 29ms
root@app:~/DataInsightScraper# pm2 restart ecosystem.config.cjs --only promellon
[PM2] Applying action restartProcessId on app [promellon](ids: [ 0 ])
[PM2] [promellon](0) ✓
┌────┬──────────────┬─────────────┬─────────┬─────────┬──────────┬────────┬──────┬───────────┬──────────┬──────────┬──────────┬──────────┐
│ id │ name         │ namespace   │ version │ mode    │ pid      │ uptime │ ↺    │ status    │ cpu      │ mem      │ user     │ watching │
├────┼──────────────┼─────────────┼─────────┼─────────┼──────────┼────────┼──────┼───────────┼──────────┼──────────┼──────────┼──────────┤
│ 0  │ promellon    │ default     │ 1.0.0   │ fork    │ 5879     │ 0s     │ 35   │ online    │ 0%       │ 18.1mb   │ root     │ disabled │
└────┴──────────────┴─────────────┴─────────┴─────────┴──────────┴────────┴──────┴───────────┴──────────┴──────────┴──────────┴──────────┘
root@app:~/DataInsightScraper#
root@app:~/DataInsightScraper#
root@app:~/DataInsightScraper# pm2 logs promellon
[TAILING] Tailing last 15 lines for [promellon] process (change the value with --lines option)
/root/.pm2/logs/promellon-out.log last 15 lines:
0|promello | ✅ Clean build. No dev logic here.
0|promello | ✅ Clean build. No dev logic here.
0|promello | ✅ Clean build. No dev logic here.
0|promello | ✅ Clean build. No dev logic here.
0|promello | ✅ Clean build. No dev logic here.
0|promello | ✅ Clean build. No dev logic here.
0|promello | ✅ Clean build. No dev logic here.
0|promello | ✅ Clean build. No dev logic here.
0|promello | ✅ Clean build. No dev logic here.
0|promello | ✅ Clean build. No dev logic here.
0|promello | ✅ Clean build. No dev logic here.
0|promello | ✅ Clean build. No dev logic here.
0|promello | ✅ Clean build. No dev logic here.
0|promello | ✅ Clean build. No dev logic here.
0|promello | ✅ Clean build. No dev logic here.

/root/.pm2/logs/promellon-error.log last 15 lines:
0|promello |     at file:///root/DataInsightScraper/dist/index.js:6468:20
0|promello |     at ModuleJob.run (node:internal/modules/esm/module_job:195:25)
0|promello |     at async ModuleLoader.import (node:internal/modules/esm/loader:337:24) {
0|promello |   code: 'ERR_INVALID_ARG_TYPE'
0|promello | }
0|promello | TypeError [ERR_INVALID_ARG_TYPE]: The "paths[0]" argument must be of type string. Received undefined
0|promello |     at __node_internal_captureLargerStackTrace (node:internal/errors:496:5)
0|promello |     at new NodeError (node:internal/errors:405:5)
0|promello |     at validateString (node:internal/validators:162:11)
0|promello |     at Object.resolve (node:path:1115:7)
0|promello |     at file:///root/DataInsightScraper/dist/index.js:6468:20
0|promello |     at ModuleJob.run (node:internal/modules/esm/module_job:195:25)
0|promello |     at async ModuleLoader.import (node:internal/modules/esm/loader:337:24) {
0|promello |   code: 'ERR_INVALID_ARG_TYPE'
0|promello | }


